<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://bijaykumarpun.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://bijaykumarpun.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-06-21T16:45:45+00:00</updated><id>https://bijaykumarpun.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">LTV and CPI on App Revenue</title><link href="https://bijaykumarpun.github.io/blog/2025/ltv-and-cpi/" rel="alternate" type="text/html" title="LTV and CPI on App Revenue"/><published>2025-06-20T12:00:00+00:00</published><updated>2025-06-20T12:00:00+00:00</updated><id>https://bijaykumarpun.github.io/blog/2025/ltv-and-cpi</id><content type="html" xml:base="https://bijaykumarpun.github.io/blog/2025/ltv-and-cpi/"><![CDATA[<h3 id="ltv-lifetime-value">LTV (Lifetime Value)</h3> <p>The average revenue a user generates during their entire time using an app.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Formula (simplified):
LTV = ARPU × Average User Lifespan
(ARPU = Average Revenue Per User)  
</code></pre></div></div> <ul> <li>Helps to decide how much we can spend to acquire a user.</li> <li>Core to long-term profitability and valuation.</li> </ul> <hr/> <h3 id="arpu-average-revenue-per-user">ARPU (Average Revenue Per User)</h3> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Formula:
ARPU = Total Revenue / Number of Active Users
</code></pre></div></div> <p>Example: If earnings is $500 this month and had 1,000 active users:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ARPU = $500 / 1000 = $0.50
</code></pre></div></div> <hr/> <h3 id="cpi-cost-per-install">CPI (Cost Per Install)</h3> <p>The average cost you pay in advertising to acquire one new install.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Formula:
CPI = Total Ad Spend / Number of Installs
</code></pre></div></div> <ul> <li>Tells how efficiently we’re acquiring users.</li> <li>Helps measure the performance of paid campaigns.</li> </ul> <hr/> <h3 id="key-rule">Key Rule:</h3> <p>For profit:</p> <ul> <li>LTV must be greater than CPI (i.e., we’re earning more from a user than it costs to get them)</li> </ul> <hr/> <h4 id="sample-ltv--cpi-calculation">Sample LTV &amp; CPI Calculation</h4> <p>This was done on an early stage app, which has a negative net revenue</p> <p><img src="/assets/img/posts/ltv-retention.png" height="400px"/></p> <hr/>]]></content><author><name></name></author><summary type="html"><![CDATA[Life Time Value and Cost Per Install when it comes to app revenue]]></summary></entry><entry><title type="html">Using adb to speed up old Android device</title><link href="https://bijaykumarpun.github.io/blog/2025/using-adb-to-speed-up-old-android-device/" rel="alternate" type="text/html" title="Using adb to speed up old Android device"/><published>2025-06-12T12:00:00+00:00</published><updated>2025-06-12T12:00:00+00:00</updated><id>https://bijaykumarpun.github.io/blog/2025/using-adb-to-speed-up-old-android-device</id><content type="html" xml:base="https://bijaykumarpun.github.io/blog/2025/using-adb-to-speed-up-old-android-device/"><![CDATA[<h4 id="background">Background</h4> <p>I was contemplating on buying a new Android device for development &amp; testing purposes because the old ones I had were lagging pretty bad [thanks to Samsung]. However, I also didn’t want to spend another fortune on a flagship phone. One alternative I had was to root the phone or install a custom ROM - but I wasn’t too sure if that would solve the issue; this would also introduce another variable in testing that I just didn’t have the capacity for.</p> <p>After some fiddling around, I came across this idea of using <code class="language-plaintext highlighter-rouge">adb</code> to disable apps that were not needed on the phone and, to my grand surprise, the result was super impressive.</p> <h4 id="steps">Steps:</h4> <h5 id="1-enable-usb-debugging-on-the-phone--connect-to-the-pc">1. Enable USB debugging on the Phone &amp; connect to the PC</h5> <h5 id="2-ask-chatgpt-on-the-list-of-packages-that-arent-needed-on-your-android-device-model-that-should-give-out-a-list-like-this">2. Ask ChatGPT on the list of packages that aren’t needed on your Android device model. That should give out a list like this:</h5> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># For Samsung Galaxy M02
com.sec.android.app.sbrowser.lite           # Samsung Internet Lite
com.samsung.android.app.galaxyfinder        # Finder/Search on Samsung
com.samsung.android.smartswitchassistant    # Smart Switch
com.sec.android.app.billing                 # Samsung billing client
com.samsung.android.app.settings.bixby      # Bixby settings
com.samsung.android.privateshare            # Private share (rarely used)
com.sec.android.daemonapp                   # Weather daemon
com.sec.android.easyMover.Agent             # Data transfer
com.sec.android.gallery3d                   # Samsung Gallery (disable if using Google Photos)
com.sec.android.app.myfiles                 # My Files app (can be replaced)
com.samsung.android.messaging               # Samsung Messages (if using Google Messages)
com.samsung.android.app.contacts            # Samsung Contacts (if using Google Contacts)
com.google.android.youtube                  # YouTube (can be reinstalled later)
com.google.android.gm                       # Gmail (if using other mail app)
com.google.android.apps.tachyon             # Google Duo/Meet
com.microsoft.skydrive                      # OneDrive
com.facebook.services
com.facebook.system
com.facebook.appmanager                     # Facebook bloatware
com.samsung.android.app.soundpicker         # Sound picker (not essential)
com.samsung.android.forest                  # Samsung's forest campaign app
com.sec.android.app.clockpackage            # Samsung Clock (if replaced)
com.google.android.apps.maps                # Google Maps (disable if unused)
com.samsung.android.app.updatecenter        # App update center
com.sec.android.app.fm                      # FM Radio
com.sec.android.app.personalization         # Theme &amp; wallpaper store
com.samsung.android.mdx.quickboard          # Samsung Continuity clipboard
com.sec.android.widgetapp.webmanual         # Samsung user guide
com.sec.android.app.dressroom               # Themes/Dressroom app
com.sec.mygalaxy.NEBangS                    # My Galaxy bloatware
com.wsomacp                                 # Unknown carrier-related
com.samsung.android.bluelightfilter         # Night light filter
com.sec.imslogger                           # IMS logger (VoLTE debug tool)
com.samsung.android.aircommandmanager       # Air Command (for S Pen — M02 doesn’t have it)
com.sec.bcservice                           # Knox
com.samsung.klmsagent                       # Knox Key Agent
com.android.egg                             # Android Easter egg
com.aura.oobe.samsung                       # Aura bloatware
</code></pre></div></div> <h5 id="3-create-a-sh-file-and-save-it-on-pc">3. Create a <code class="language-plaintext highlighter-rouge">.sh</code> file and save it on PC</h5> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># disable-packages.sh
#!/bin/bash

# Re-enable (reinstall) Samsung and third-party bloatware packages

packages=(
  com.samsung.android.app.galaxyfinder
  com.samsung.android.smartswitchassistant
  com.samsung.android.calendar
  com.sec.android.app.sbrowser.lite
  com.samsung.android.messaging
  com.samsung.android.MtpApplication
  com.sec.android.app.myfiles
  com.samsung.android.smartcallprovider
  com.samsung.android.app.contacts
  com.samsung.android.biometrics.app.setting
  com.samsung.android.app.clockpack
  com.samsung.android.app.updatecenter
  com.samsung.android.app.omcagent
  com.sec.android.app.fm
  com.facebook.katana
  com.facebook.services
  com.facebook.system
  com.facebook.appmanager
  com.microsoft.skydrive
  com.hiya.star
  com.sec.android.easyMover.Agent
  com.samsung.klmsagent
  com.samsung.android.privateshare
  com.sec.android.gallery3d
  com.sec.android.daemonapp
  com.sec.android.app.soundalive
  com.sec.android.app.billing
  com.sec.android.app.SecSetupWizard
  com.aura.oobe.samsung
  com.sec.android.app.ringtoneBR
  com.samsung.android.shortcutbackupservice
  com.sec.android.app.personalization
  com.samsung.android.app.settings.bixby
  com.samsung.android.mdx.quickboard
  com.sec.android.app.samsungapps
  com.samsung.android.app.dressroom
  com.samsung.app.newtrim
  com.samsung.android.lool
  com.sec.mygalaxy.NEBangS
  com.samsung.android.forest
  com.samsung.safetyinformation
  com.google.android.youtube
  com.google.android.gm
  com.google.android.apps.maps
  com.google.android.apps.tachyon
  com.google.android.projection.gearhead
  com.google.android.apps.turbo
  com.android.egg
)

for package in "${packages[@]}"
do
  echo "Disabling $package..."
  adb shell pm uninstall --user 0 "$package"
done

echo "Done. Packages disabled."

</code></pre></div></div> <h5 id="4-make-the-script-executable">4. Make the script executable</h5> <p><code class="language-plaintext highlighter-rouge">sudo chmod +x disable-packages.sh</code></p> <h5 id="5-execute">5. Execute</h5> <p><code class="language-plaintext highlighter-rouge">./disable-package.sh</code></p> <p>Point to note:</p> <ul> <li>This will disable most of the apps so it’s important to properly check what packages are being disabled</li> <li>To re-enable, use <code class="language-plaintext highlighter-rouge">adb shell cmd package install-existing "$package"</code></li> </ul> <hr/>]]></content><author><name></name></author><summary type="html"><![CDATA[Disabling packages that aren't needed on a test device]]></summary></entry><entry><title type="html">Linux Test Session: Manually Mounting a SDHC Card</title><link href="https://bijaykumarpun.github.io/blog/2025/manually-mounting-sdhc-card/" rel="alternate" type="text/html" title="Linux Test Session: Manually Mounting a SDHC Card"/><published>2025-04-06T12:00:00+00:00</published><updated>2025-04-06T12:00:00+00:00</updated><id>https://bijaykumarpun.github.io/blog/2025/manually-mounting-sdhc-card</id><content type="html" xml:base="https://bijaykumarpun.github.io/blog/2025/manually-mounting-sdhc-card/"><![CDATA[<p><img src="https://dev-to-uploads.s3.amazonaws.com/i/uoxzx0gm8o0d580yip8n.jpg" alt="Alt Text"/></p> <p>The system failed to detect ( and mount) the card when inserted. Ultimately, had to manually mount it.</p> <h5 id="1-check-if-the-device-is-read-by-the-system">#1. Check if the device is read by the system:</h5> <ul> <li>Before inserting</li> </ul> <p><code class="language-plaintext highlighter-rouge">*$ ls /dev/* | wc -l</code></p> <p><img src="https://dev-to-uploads.s3.amazonaws.com/i/mrkd736spkltpaf0ixim.png" alt="Alt Text"/></p> <ul> <li>After inserting</li> </ul> <p><code class="language-plaintext highlighter-rouge">*$ ls /dev/* | wc -l</code></p> <p><img src="https://dev-to-uploads.s3.amazonaws.com/i/pc31avlvhn3eepf0f6bt.png" alt="Alt Text"/></p> <p>*538 to 542 tells some files or directories were added</p> <ul> <li>Also</li> </ul> <p><code class="language-plaintext highlighter-rouge">*$ dmesg | tail -n 7*</code></p> <p><img src="https://dev-to-uploads.s3.amazonaws.com/i/wqyz3ct7u59wvrrk93d2.png" alt="Alt Text"/></p> <p>Notice : <code class="language-plaintext highlighter-rouge">mmcblk0</code>, that’s the device name</p> <h5 id="2-check-if-the-device-is-listed-other-ways-to-see-if-device-is-recognized-in-some-way">#2. Check if the device is listed (Other ways to see if device is recognized in some way)</h5> <p><code class="language-plaintext highlighter-rouge">*$lsblk*</code></p> <p>Lists block devices</p> <p><code class="language-plaintext highlighter-rouge">*$lsusb*</code></p> <p>Lists usb devices</p> <p><img src="https://dev-to-uploads.s3.amazonaws.com/i/3glisipspwxplsmv17rm.png" alt="Alt Text"/></p> <p>Notice the name : <code class="language-plaintext highlighter-rouge">*mmcblk0*</code> and <code class="language-plaintext highlighter-rouge">*mmcblk0p1*</code></p> <p>Also the size : <em>3.7G</em></p> <h5 id="3-mount">#3. Mount</h5> <p><code class="language-plaintext highlighter-rouge">*$mount -t type device dir</code></p> <p>Mounts a device name <em>device</em> of fs type <em>type</em> to directory <em>dr</em></p> <p>Here:</p> <p><code class="language-plaintext highlighter-rouge">*$ sudo mount -t vfat /dev/mmcblk0p1 Desktop/card/</code></p> <ul> <li>Attempt 1</li> </ul> <p><img src="https://dev-to-uploads.s3.amazonaws.com/i/qs897vv15yohjf09isbb.png" alt="Alt Text"/></p> <ul> <li>Attempt 2</li> </ul> <p><img src="https://dev-to-uploads.s3.amazonaws.com/i/40j0m7o9oc8xlzbxj3ot.png" alt="Alt Text"/></p> <p>*[-t] option indicates fstype ie. the filesystem type with which the device is formatted; which in here is vfat The most common are ext2, ext3, ext4, xfs, btrfs, vfat, sysfs, proc, nfs and cifs *</p> <p>#DONE!</p>]]></content><author><name></name></author><summary type="html"><![CDATA[Manually mounting a SDHC Card in Linux]]></summary></entry><entry><title type="html">Elastic IP Address</title><link href="https://bijaykumarpun.github.io/blog/2025/elastic-ip/" rel="alternate" type="text/html" title="Elastic IP Address"/><published>2025-01-01T12:00:00+00:00</published><updated>2025-01-01T12:00:00+00:00</updated><id>https://bijaykumarpun.github.io/blog/2025/elastic-ip</id><content type="html" xml:base="https://bijaykumarpun.github.io/blog/2025/elastic-ip/"><![CDATA[<hr/> <h1 id="elastic-ip-in-aws">Elastic IP in AWS</h1> <p>An <strong>Elastic IP (EIP)</strong> in AWS is a static, public IPv4 address designed for dynamic cloud computing. It allows you to mask the failure of an instance or software by quickly remapping the address to another instance in your AWS environment.</p> <h2 id="key-characteristics-of-elastic-ip">Key Characteristics of Elastic IP</h2> <ol> <li> <p><strong>Static Address</strong>: Unlike regular public IPs that change when an instance is stopped and restarted, an Elastic IP remains the same until you explicitly release it.</p> </li> <li> <p><strong>Reassignable</strong>: You can detach an Elastic IP from one instance and reattach it to another, making it ideal for fault-tolerant applications.</p> </li> <li> <p><strong>Public Access</strong>: Elastic IPs are used to enable external communication with your instances (e.g., web servers or application servers that need to be accessible over the internet).</p> </li> <li> <p><strong>Billing</strong>: AWS charges for unused Elastic IPs. If you allocate an Elastic IP but don’t associate it with a running instance, you incur a charge. This encourages efficient use of Elastic IPs.</p> </li> </ol> <h2 id="use-cases">Use Cases</h2> <ul> <li><strong>Failover and High Availability</strong>: You can move the Elastic IP from a failed instance to a backup instance to quickly restore services.</li> <li><strong>Consistent Endpoint</strong>: If your application requires a fixed IP address for whitelisting or DNS configurations, an Elastic IP ensures consistency.</li> </ul> <h2 id="how-to-use-an-elastic-ip">How to Use an Elastic IP</h2> <ol> <li><strong>Allocate an Elastic IP</strong>: <ul> <li>Navigate to the EC2 dashboard in AWS Management Console.</li> <li>Choose “Elastic IPs” from the left menu and click “Allocate Elastic IP address.”</li> </ul> </li> <li><strong>Associate with an Instance</strong>: <ul> <li>Once allocated, you can associate the Elastic IP with a running EC2 instance.</li> <li>The Elastic IP will replace the instance’s public IP address.</li> </ul> </li> <li><strong>Reassign or Release</strong>: <ul> <li>You can detach the Elastic IP from one instance and attach it to another.</li> <li>If no longer needed, release the Elastic IP to avoid charges.</li> </ul> </li> </ol> <h2 id="advantages">Advantages</h2> <ul> <li>Provides a stable public IP for instances that may need to change frequently.</li> <li>Supports disaster recovery and scaling by quickly reassigning the IP to different resources.</li> </ul> <h2 id="limitations">Limitations</h2> <ul> <li>There is a default limit of 5 Elastic IPs per AWS account per region (can be increased via a service request).</li> <li>You may incur charges for Elastic IPs not associated with a running instance.</li> </ul> <p>Elastic IPs are a critical tool for managing public-facing applications in the AWS cloud while maintaining reliability and flexibility.</p> <blockquote> <p>Summarized with ChatGPT</p> </blockquote> <hr/>]]></content><author><name></name></author><summary type="html"><![CDATA[Elastic IP Addresses in AWS]]></summary></entry><entry><title type="html">Scrum/Agile Ceremonies</title><link href="https://bijaykumarpun.github.io/blog/2023/scrum-ceremonies/" rel="alternate" type="text/html" title="Scrum/Agile Ceremonies"/><published>2023-08-26T08:57:00+00:00</published><updated>2023-08-26T08:57:00+00:00</updated><id>https://bijaykumarpun.github.io/blog/2023/scrum-ceremonies</id><content type="html" xml:base="https://bijaykumarpun.github.io/blog/2023/scrum-ceremonies/"><![CDATA[<hr/> <h4 id="concept">Concept</h4> <p>To put it simply, scrum ceremonies are just meetings that allow stakeholders to be in sync with the product’s progress/state.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Stakeholders:
- Project Managers
- Product Owners
- Team Managers/Leads
- Developers
- (Anyone with vested interest in the product eg. Leadership)
</code></pre></div></div> <p>Scrum ceremonies are performed every sprint cycle, and in some cases every two/three weeks depending upon project’s/team’s needs.</p> <h5 id="1-sprint-planning">1. Sprint Planning</h5> <p>In Sprint Planning, sprint goals are finalized &amp; tasks/tickets/action-items are drafted to the upcoming sprint, and likewise assigned to developers/stakeholders.</p> <h5 id="2-daily-standup">2. Daily Standup</h5> <p>In Daily Standup, updates are provided on the tasks/tickets and inspected against the sprint goals.</p> <h5 id="3-sprint-reviewdemo">3. Sprint Review/Demo</h5> <p>Sprint Review is done at the end of the sprint, where a demo is provided on whatever was developed in the current sprint.</p> <h5 id="4-sprint-retrospective">4. Sprint Retrospective</h5> <p>In Sprint Retrospective, whatever went well or didn’t go well throughout the sprint is discussed along with action items (improvement plans) to be implemented on the next sprint.</p> <h5 id="5-product-backlog-refinement">5. Product Backlog Refinement</h5> <p>Backlog Refinement is when new tasks or uncompleted tasks from the previous sprints are reviewed/revised/re-prioritized.</p> <h5 id="6-11-meetings">6. 1/1 Meetings</h5> <p>Not strictly a Scrum ceremony, but agile teams working remotely are generally expected to have 1/1 with their stakeholders to discuss/catchup on anything from either sides.</p> <h4 id="preparing-for-meetings">Preparing for meetings</h4> <p>It’s super important that one is prepared ahead of time before attending the meetings; because Scrum meetings can be both time consuming as well as energy draining and sometimes spending hours in meetings can take away a lot of productive hours. Top ways to handle meetings:</p> <ol> <li>Be informed on the meeting’s agenda, if not important then just skip!</li> <li>Take note where needed; or have the meeting recorded if it’s virtual</li> <li>Participate in discussions proactively</li> </ol> <hr/>]]></content><author><name></name></author><summary type="html"><![CDATA[Scrum/Agile ceremonies]]></summary></entry><entry><title type="html">Stakeholder Management</title><link href="https://bijaykumarpun.github.io/blog/2023/stakeholder-management/" rel="alternate" type="text/html" title="Stakeholder Management"/><published>2023-07-27T22:21:00+00:00</published><updated>2023-07-27T22:21:00+00:00</updated><id>https://bijaykumarpun.github.io/blog/2023/stakeholder-management</id><content type="html" xml:base="https://bijaykumarpun.github.io/blog/2023/stakeholder-management/"><![CDATA[<hr/> <blockquote> <p><strong>Stakeholder Management is just people management!</strong><br/> But if the concept is new or not well understood, it can quickly become confusing—and frustrating.</p> </blockquote> <hr/> <h2 id="what-is-stakeholder-management">What is Stakeholder Management?</h2> <p>In any project, there are <em>stakeholders</em>—people or entities with a vested interest in the project’s outcome. While they may not be directly involved in building the product, it’s still <strong>critically important</strong> for them to stay informed. Why? Because they may need to adjust priorities, provide input, or align other efforts based on the project’s progress.</p> <p>This need for visibility, however, isn’t always obvious to those working hands-on with the project. Developers or contributors may be fully immersed in completing their tasks, focused on execution. For them, it might not be top of mind to consider what others need to know.</p> <p>Here’s the catch:<br/> Those <em>not</em> working directly on the project don’t have the same visibility. If no one communicates with them explicitly, things can become opaque. They may be left guessing about progress, risks, or delays—which leads to misalignment or dissatisfaction.</p> <p><strong>That’s where stakeholder management comes in.</strong></p> <hr/> <h2 id="why-it-matters">Why it Matters</h2> <p>Stakeholder management ensures that the <em>right people</em> have the <em>right information</em> at the <em>right time</em>. It’s about making sure everyone—especially those who need to stay in the loop—understands what’s happening, what the direction is, who’s responsible for what, and when things are expected to be delivered.</p> <p>At its core, stakeholder management is <strong>effective communication</strong>. That’s the heart of it.</p> <hr/> <h2 id="tips-for-good-stakeholder-management">Tips for Good Stakeholder Management</h2> <ol> <li> <p><strong>Overcommunicate.</strong><br/> When in doubt, share the update. It’s better to say something twice than not at all.</p> </li> <li> <p><strong>Share timely updates.</strong><br/> Even if progress is slow or blocked, keep stakeholders informed.</p> </li> <li> <p><strong>Flag blockers early.</strong><br/> Don’t wait until it’s critical—if something’s in your way, raise it.</p> </li> <li> <p><strong>Don’t go MIA.</strong><br/> Going silent creates anxiety and confusion. Stay visible.</p> </li> </ol> <hr/> <h2 id="a-word-on-balance">A Word on Balance</h2> <p>While communication is essential, it’s equally important to strike a balance. Constant updates can become noise. So yes—share progress, raise flags, but also:</p> <ul> <li>Say <em>no</em> when timelines are unrealistic.</li> <li>Push back on unreasonable demands.</li> <li>Manage expectations just as much as deliverables.</li> </ul> <hr/> <p><strong>In short:</strong><br/> Stakeholder management is not about bureaucracy—it’s about <em>trust</em>, <em>transparency</em>, and <em>teamwork</em>. When done well, it keeps everyone rowing in the same direction.</p> <hr/>]]></content><author><name></name></author><summary type="html"><![CDATA[Stakeholder Management]]></summary></entry><entry><title type="html">Clean Architecture Pattern</title><link href="https://bijaykumarpun.github.io/blog/2023/clean-architecture-pattern/" rel="alternate" type="text/html" title="Clean Architecture Pattern"/><published>2023-06-24T18:00:00+00:00</published><updated>2023-06-24T18:00:00+00:00</updated><id>https://bijaykumarpun.github.io/blog/2023/clean-architecture-pattern</id><content type="html" xml:base="https://bijaykumarpun.github.io/blog/2023/clean-architecture-pattern/"><![CDATA[<hr/> <h4 id="principles">Principles</h4> <ul> <li>Separation of concerns</li> <li>Drive UI from data models</li> <li>Single source of truth</li> <li>Unidirectional data flow (States &amp; events flow in opposite directions)</li> </ul> <h4 id="modules">Modules</h4> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>app
domain (optional)
data
</code></pre></div></div> <h4 id="data-flow">Data flow</h4> <p><img src="/assets/img/posts/clean-architecture-dfd.png" width="700"/></p> <h4 id="example-folder-structure">Example folder structure</h4> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>// Android project

  ├── MyWeatherApplication.kt
├── data
│   ├── repositories
│   └── source
│       ├── device
│       └── weather
├── domain
│   ├── models
│   └── use_cases
│       ├── device
│       └── weather
├── infrastructure
│   └── di
└── presentation
    ├── framework
    │   └── theme
    └── screen
        ├── home
        │   └── model
        ├── settings
        └── weather_detail
</code></pre></div></div> <hr/>]]></content><author><name></name></author><summary type="html"><![CDATA[Design pattern]]></summary></entry><entry><title type="html">Checklist: X Programming Language</title><link href="https://bijaykumarpun.github.io/blog/2022/x-programming-language-checklist/" rel="alternate" type="text/html" title="Checklist: X Programming Language"/><published>2022-10-29T15:00:00+00:00</published><updated>2022-10-29T15:00:00+00:00</updated><id>https://bijaykumarpun.github.io/blog/2022/x-programming-language-checklist</id><content type="html" xml:base="https://bijaykumarpun.github.io/blog/2022/x-programming-language-checklist/"><![CDATA[<hr/> <h5 id="part-i--preliminaries">Part I : Preliminaries</h5> <ul> <li>Origin</li> <li>Version history</li> <li>Requirements and dependencies <ul> <li>Runtime environment</li> <li>Package manager</li> </ul> </li> <li>Working mechanism</li> <li>Programming Paradigm <ul> <li>Statically vs dynamically typed</li> <li>Primitives and reference types</li> <li>Imperative (Procedural, Structured, Object Oriented) vs declarative (Functional, Logic)</li> </ul> </li> <li>Setup &amp; installation</li> </ul> <h5 id="part-ii--syntax">Part II : Syntax</h5> <ul> <li>Syntax <ul> <li>Variables</li> <li>Arrays</li> <li>Objects</li> <li>Functions</li> <li>Classes</li> <li>Networking</li> <li>Making API calls</li> <li>Asynchronicity</li> <li>Adding/generating libraries</li> </ul> </li> <li>OOP Principle Implementation <ul> <li>Encapsulation</li> <li>Inheritence</li> <li>Polymorphism</li> <li>Abstraction</li> </ul> </li> </ul> <h5 id="part-iii--structure">Part III : Structure</h5> <ul> <li>Project folder structure</li> <li>Design pattern</li> </ul> <hr/>]]></content><author><name></name></author><summary type="html"><![CDATA[Checklist for picking up a new programming language]]></summary></entry></feed>